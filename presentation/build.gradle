apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"

apply from: '../environments.gradle'
apply from: '../baseAppDataPresentation.gradle'

android {
    compileSdkVersion rootProject.ext.androidCompileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner rootProject.ext.testInstrumentationRunner
    }

    buildTypes {
        debug {
            buildConfigField "String", "AUDIO_URL", "\"" + environments.debug.audioURL + "\""
        }
        release {
            buildConfigField "String", "AUDIO_URL", "\"" + environments.release.audioURL + "\""
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }

}

configurations {
    instrumentationTestImplementation.extendsFrom androidTestImplementation
}

dependencies {
    //android support libs
    implementation "androidx.appcompat:appcompat:$supportVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    implementation "androidx.core:core-ktx:$coreKtxVersion"
    implementation "androidx.legacy:legacy-support-v4:$legacyVersion"
    //navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"
    //reactive
    implementation "com.jakewharton.rxbinding3:rxbinding:$rxBindingVersion"
    //ui
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"
    implementation "com.facebook.shimmer:shimmer:$shimmerVersion"
    implementation "com.airbnb.android:lottie:$lottieVersion"
    //android architecture component
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-reactivestreams:$lifecycleVersion"
    //dependency injection
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    // region implementations in presentation and app gradles
    //dependency injection
    api "com.google.dagger:dagger-android:$daggerVersion"
    api "com.google.dagger:dagger-android-support:$daggerVersion"
    //reactive
    api "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    //other
    api "cat.ereza:customactivityoncrash:$customactivityoncrashVersion"
    api "com.google.android.material:material:$materialVersion"
    api "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    //test
    androidTestImplementation "androidx.test:runner:$supportTestVersion"
    androidTestImplementation "androidx.test:rules:$supportTestVersion"
    androidTestImplementation "androidx.test:core:$testCoreVersion"
    androidTestImplementation "androidx.test.ext:junit:$testExtJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    // endregion

    implementation project(':domain')
    testImplementation project(path: ':domain', configuration: 'unitTestImplementation')
}
